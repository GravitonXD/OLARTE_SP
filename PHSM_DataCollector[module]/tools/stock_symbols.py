test_symbols = [
    "AC", 
    "ALI",
    "AP",
    "BDO", 
    "BPI", 
    "ICT", 
    "JFC",
    "MBT",
    "MPI",
    "SM",
    "SMPH",
    "TEL",
    "URC"
]

# Use this function for prototype testing
def get_test_symbols():
    return test_symbols

stock_symbols = [
    "2GO",
    "8990P",
    "AAA",
    "AB",
    "ABA",
    "ABG",
    "ABS",
    "ABSP",
    "AC",
    "ACE",
    "ACEN",
    "ACEX",
    "ACPA",
    "ACPB1",
    "ACR",
    "AEV",
    "AGI",
    "ALCO",
    "ALCPB",
    "ALCPC",
    "ALHI",
    "ALI",
    "ALLDY",
    "ALLHC",
    "ANI",
    "ANS",
    "AP",
    "APB2R",
    "APC",
    "APL",
    "APO",
    "APVI",
    "APX",
    "AR",
    "ARA",
    "AREIT",
    "ASLAG",
    "AT",
    "ATI",
    "ATN",
    "ATNB",
    "AUB",
    "AXLM",
    "BALAI",
    "BC",
    "BCB",
    "BCOR",
    "BCP",
    "BDO",
    "BEL",
    "BH",
    "BHI",
    "BKR",
    "BLFI",
    "BLOOM",
    "BMM",
    "BNCOM",
    "BPI",
    "BRN",
    "BRNP",
    "BSC",
    "C",
    "CA",
    "CAB",
    "CAT",
    "CDC",
    "CEB",
    "CEBCP",
    "CEI",
    "CEU",
    "CHI",
    "CHIB",
    "CHP",
    "CIC",
    "CIP",
    "CLI",
    "CNPF",
    "CNVRG",
    "COAL",
    "COL",
    "COSCO",
    "CPG",
    "CPGP",
    "CPM",
    "CREIT",
    "CROWN",
    "CSB",
    "CTS",
    "CYBR",
    "DD",
    "DDMPR",
    "DDPR",
    "DELM",
    "DFNN",
    "DITO",
    "DIZ",
    "DMC",
    "DMCP",
    "DMPA1",
    "DMPA2",
    "DMW",
    "DNA",
    "DNL",
    "DTEL",
    "DWC",
    "EAGLE",
    "ECP",
    "EEI",
    "EG",
    "ELI",
    "EMI",
    "EURO",
    "EVER",
    "EW",
    "FAF",
    "FB",
    "FBP",
    "FBP2",
    "FCG",
    "FDC",
    "FERRO",
    "FEU",
    "FFI",
    "FGEN",
    "FGENG",
    "FILRT",
    "FJP",
    "FJPB",
    "FLI",
    "FMETF",
    "FNI",
    "FOOD",
    "FPH",
    "FPI",
    "FRUIT",
    "GEO",
    "GERI",
    "GLO",
    "GLOPA",
    "GLOPP",
    "GMA7",
    "GMAP",
    "GPH",
    "GREEN",
    "GSMI",
    "GTCAP",
    "GTPPA",
    "GTPPB",
    "HI",
    "HLCM",
    "HOME",
    "HOUSE",
    "HTI",
    "HVN",
    "I",
    "ICT",
    "IDC",
    "IMI",
    "IMP",
    "INFRA",
    "ION",
    "IPM",
    "IPO",
    "IS",
    "JAS",
    "JFC",
    "JFCPA",
    "JFCPB",
    "JGS",
    "JOH",
    "KEEPR",
    "KEP",
    "KPH",
    "KPHB",
    "KPPI",
    "LAND",
    "LBC",
    "LC",
    "LCB",
    "LFM",
    "LMG",
    "LODE",
    "LOTO",
    "LPZ",
    "LR",
    "LRP",
    "LSC",
    "LTG",
    "MA",
    "MAB",
    "MAC",
    "MACAY",
    "MAH",
    "MAHB",
    "MARC",
    "MAXS",
    "MB",
    "MBC",
    "MBT",
    "MED",
    "MEDIC",
    "MEG",
    "MER",
    "MFC",
    "MFIN",
    "MG",
    "MHC",
    "MJC",
    "MJIC",
    "MM",
    "MONDE",
    "MPI",
    "MRC",
    "MREIT",
    "MRSGI",
    "MVC",
    "MWC",
    "MWIDE",
    "MWP",
    "NI",
    "NIKL",
    "NOW",
    "NRCP",
    "OM",
    "OPM",
    "OPMB",
    "ORE",
    "OV",
    "PA",
    "PAL",
    "PAX",
    "PBB",
    "PBC",
    "PCOR",
    "PERC",
    "PGOLD",
    "PHA",
    "PHES",
    "PHN",
    "PHR",
    "PIZZA",
    "PLC",
    "PMPC",
    "PNB",
    "PNX",
    "PNX3A",
    "PNX3B",
    "PNX4",
    "PNXP",
    "PORT",
    "PPC",
    "PRC",
    "PRF2A",
    "PRF2B",
    "PRF3A",
    "PRF3B",
    "PRIM",
    "PRMX",
    "PSB",
    "PSE",
    "PTC",
    "PX",
    "PXP",
    "RCB",
    "RCI",
    "RCR",
    "REG",
    "RFM",
    "RLC",
    "RLT",
    "ROCK",
    "ROX",
    "RRHI",
    "SBS",
    "SCC",
    "SECB",
    "SEVN",
    "SFI",
    "SFIP",
    "SGI",
    "SGP",
    "SHLPH",
    "SHNG",
    "SLF",
    "SLI",
    "SM",
    "SMC",
    "SMC2A",
    "SMC2B",
    "SMC2C",
    "SMC2D",
    "SMC2E",
    "SMC2F",
    "SMC2G",
    "SMC2H",
    "SMC2I",
    "SMC2J",
    "SMC2K",
    "SMCP1",
    "SMPH",
    "SOC",
    "SPC",
    "SPM",
    "SPNEC",
    "SRDC",
    "SSI",
    "SSP",
    "STI",
    "STR",
    "SUN",
    "T",
    "TBGI",
    "TCB2A",
    "TECH",
    "TECHW",
    "TEL",
    "TFC",
    "TFHI",
    "TUGS",
    "UBP",
    "UNI",
    "UPM",
    "URC",
    "V",
    "VITA",
    "VLL",
    "VMC",
    "VREIT",
    "VUL",
    "VVT",
    "WEB",
    "WIN",
    "WLCON",
    "WPI",
    "X",
    "ZHI"
]

# Get the list of all stocks in the PSEi
def get_stock_symbols():
    return stock_symbols